theme_minimal(base_size = 12) +
aes(size = dist) +
aes(color = dist) +
scale_color_viridis_c() +
geom_smooth() +
theme(legend.position =
"none") +
labs(x = "Distance") +
labs(y = "Speed") + #BREAK
labs(title = "Cool plot!") +
theme(plot.title.position =
"plot") #BREAK
embed_flipbook(chunk_name = "fine_tuning",
# use_share_again = T,
# use_embed_xaringan = T,
font_size = 100,
title_page = T,
title = "How to Style your Plot",
subtitle = "Thematic Adjustments",
author = "Reynolds Lab",
break_type = "user")
xaringanExtra::use_share_again()
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(fig.width = 6, message = FALSE, warning = FALSE, comment = "", cache = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
xaringanExtra::use_share_again()
library(tidyverse)
"https://images.unsplash.com/photo-1584717900604-56cd6daf54f5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=633&q=80" %>%
magick::image_read() %>%
magick::image_rotate(90) %>%
magick::image_write("broom.jpg")
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = F , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
library(clinicalfd)
data(clinicalfd)
library(clinicalfd)
data( )
library(clinicalfd)
data(clinicalfd )
library(clinicalfd)
data(adsl )
library(clinicalfd)
data(adsl )
head(adsl)
library(clinicalfd)
# data()
data(package = 'clinicalfd' )
head(adsl)
library(clinicalfd)
# data()
data  <- data(package = 'clinicalfd' )
data
head(adsl)
library(clinicalfd)
# data()
data  <- data(package = 'clinicalfd' )
data
head(adsl)
unlink("mini_flip_book_cache", recursive = TRUE)
# library(clinicalfd)
# data()
# data  <- data(package = 'clinicalfd' )
# data
# head(adsl)
cars %>%
filter(speed > 4) %>%
ggplot() +
aes(x = speed) + #BREAK
aes(y = dist) + #BREAK
geom_point(
alpha = .8,
color = "blue"
) +
aes(size = speed) #BREAK
xaringanExtra::use_share_again()
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = T , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
here::here(codelist)
library(here)
here::here('codelist')
here::here("data")
here()
here::here("data , "adsl")
library(here)
here()
adsl <- clinicalfd::adsl
here::here('codelist')
here::here("data , "adsl")
library(here)
here()
adsl <- clinicalfd::adsl
here::here('codelist')
here::here("data" , "adsl")
?here()
?here
folder <- "Programs"
if (file.exists(folder)) {
cat("The folder already exists")
} else {
dir.create(folder)
}
library(here)
if (!dir.exists(here(results)))
{dir.create(here(results))}
library(here)
if (!dir.exists(here('results')))
{dir.create(here('results'))}
# Types of Numeric vector
x <- c(1,2,3,4,5,6)
class(x)
a1 = 10
class(a1)
b1 <- 11
class(b1)
x <- c("Mon" , "TUE" , "Wed")
a1 = "THUR"
b1 <- FRI
x <- c("Mon" , "TUE" , "Wed")
a1 = "THUR"
# b1 <- FRI  This gives an ERROR
class(x)
class(a1)
#class(b1)
1 + 1
5 * 8
(4 + 2)^2
3 / (3 + 6)
xaringanExtra::use_share_again()
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = T , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
?here()
adsl <- clinicalfd::adsl
here::here('codelist')
#here::here("data" , "adsl")
```
c <- 10
typeof(c)
c <- 1
typeof(c)
c <- c(1 ,2,3)
typeof(c)
c <- c(1 ,"2",3)
typeof(c)
c <- c(1 ,"Character","Three")
typeof(c)
c1 <- c *1
c <- c(1 ,"2",3)
char <- as.character(c)
char
char <- as.character(c (1,"Num" ))
char
x <- 1:3
x
typeof(x)
x[2] <- "Hi"
x
x <- c("a" "b" "b")
x <- c("a" ,"b" ,"b")
as.numeric(x)
data_types <- list ()
data_types <- list (double = 10.0 , int = 1 , integer = 10L , character = "10" , logical = "TRUE" )
str(data_types)
data_types
multiplication <- data_types * 5
multiplication <- data_types$int * 5
multiplication
multiplication <- data_types$integer * 5
multiplication
list_data <- list ("RED" ,"Green" , c(21,32,11) , TRUE , 51.3 ,119 , 10:30 )
print(list_data)
list_data <- list ("RED" ,"Green" , c(21,32,11) , TRUE , 51.3 ,119 , 10:30 )
print(list_data)
df1 <- data.frame( y1 = c(1,1,3) y2 = (2,3,4))
df1 <- data.frame( y1 = c(1,1,3), y2 = (2,3,4))
df1 <- data.frame( y1 = c(1,1,3), y2 = c(2,3,4) )
df2 <- data.frame( y1 = c("1","1","3"), y2 = c(2,3,4) )
list_of_dataframes <- list(df1,df2)
list_of_dataframes
print(list_of_dataframes)
str(list_of_dataframes)
df1 <- data.frame( y1 = c(1,1,3), y2 = c(2,3,4) )
df2 <- data.frame( y1 = c("1","1","3"), y2 = c(2,3,4) )
df1 <- data.frame( y1 = c(1,1,3), y2 = c(2,3,4) )
df2 <- data.frame( y1 = c("1","1","3"), y2 = c(2,3,4) )
df1 <- data.frame( y1 = c(1,1,3), y2 = c(2,3,4) )
df2 <- data.frame( y1 = c("1","1","3"), y2 = c(2,3,4) )
list_of_dataframes <- list(df1,df2)
list_of_dataframes <- list( "Dataframe1" = df1, "Dataframe2" = df2)
print(list_of_dataframes)
str(list_of_dataframes)
unlink("mini_flip_book_cache", recursive = TRUE)
d = data.frame(num = c(1,2,3) , label = c('A','B','A+B') , flag = c("TRUE" , FALSE , TRUE ) )
d
typeof(d)
d = data.frame(num = c(1,2,3) , label = c('A','B','A+B') , flag = c(TRUE , FALSE , TRUE ) )
typeof(d)
as.list(d)
d = data.frame(num = c(1,2,3) , label = c('A','B','A+B') , flag = c(TRUE , FALSE , TRUE ) )
d1 <- as.list(d)
d = data.frame(num = c(1,2,3) , label = c('A','B','A+B') , flag = c(TRUE , FALSE , TRUE ) )
d1 <- as.list(d)
d = data.frame(num = c(1,2,3) , label = c('A','B','A+B') , flag = c(TRUE , FALSE , TRUE ) )
d1 <- as.list(d)
d = data.frame(num = c(1,2,3) , label = c('A','B','A+B') , flag = c(TRUE , FALSE , TRUE ) )
str(d)
d = data.frame(num = c(1,2,3) , label = c('A','B','A+B') , flag = c(TRUE , FALSE , TRUE ) )
str(d)
d = data.frame(num = c(1,2,3) , label = c('A','B','A+B') , flag = c(TRUE , FALSE , TRUE ) )
str(d)
typeof(d)
a <- 2
b <- c <<- value<="" code = "">
c <<- value<="" code = "">
a <- b <-2
a
b
2 -> a
a
10 -> b
a <- 2
a <-b <- c <- 10
a = 2
a = b = c = 12
a -> b -> c -> 10
a -> 10
a ->> 10
a
a <-  10
a
a <- b <- c <- 10
a
a <- b <- c <- 10
100 -> aA -> BA -> CB
xaringanExtra::use_share_again()
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = T , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
?here()
adsl <- clinicalfd::adsl
here::here('codelist')
#here::here("data" , "adsl")
```
unlink("mini_flip_book_cache", recursive = TRUE)
library(here)
#?here()
adsl <- clinicalfd::adsl
here::here('codelist')
#here::here("data" , "adsl")
```
library(here)
#?here()
adsl <- clinicalfd::adsl
#here::here('codelist')
#here::here("data" , "adsl")
```
xaringanExtra::use_share_again()
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = T , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
#?here()
adsl <- clinicalfd::adsl
#here::here('codelist')
#here::here("data" , "adsl")
```
library(here)
#?here()
#adsl <- clinicalfd::adsl
#here::here('codelist')
#here::here("data" , "adsl")
```
library(here)
if (!dir.exists(here('results')))
{dir.create(here('results'))}
unlink("mini_flip_book_cache", recursive = TRUE)
xaringanExtra::use_share_again()
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = T , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
#?here()
#adsl <- clinicalfd::adsl
#here::here('codelist')
#here::here("data" , "adsl")
```
xaringanExtra::use_share_again()
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = T , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
#?here()
#adsl <- clinicalfd::adsl
#here::here('codelist')
#here::here("data" , "adsl")
```
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = T , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
library(xaringan)
library(janitor)
library(xaringanthemer)
library(dbplyr)
library(tidyverse)
"https://images.unsplash.com/photo-1584717900604-56cd6daf54f5?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=633&q=80" %>%
magick::image_read() %>%
magick::image_rotate(90) %>%
magick::image_write("broom.jpg")
xaringanExtra::use_share_again()
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = T , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
xaringanExtra::use_share_again()
# This is the recommended set up for flipbooks
# you might think about setting cache to TRUE as you gain practice --- building flipbooks from scratch can be time consuming
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_chunk$set(fig.height = 6, out.width = "100%", comment = " ", cache = T , warning = F, message = F)
library(flipbookr)
library(tidyverse)
library(clinicalfd)
library(xaringanExtra)
library(here)
x <- c(1,2,3,4,5,6) ; class(x)
a1 = 10             ; class(a1)
b1 <- 11            ; class(b1)
x <- c("Mon" , "TUE" , "Wed");  class(x)
a1 = "THUR" ;   class(a1)
weekday <- c("Mon" , "TUE" , "Wed" , "Mon" , "Tue" , "Wed"); class(weekday )
# Getting the Count of Week days , See TUE and Tue
# are counted differently as R is case sensitive
table(weekday)
# b1 <- FRI  This gives an ERROR
#class(b1)
3:10
1:6 * 2
c(1, 2, 6, 10)
1:4 + 0:3
c(1, 2, 3, 4) + c(0, 1, 2, 3)
TRUE
c(T, T, F, F)
"hello world"
c("hello", "hi", "bye", "bye-bye")
NULL
factor(c("hello", "hi", "bye", "bye"))
factor(c("hello", "hi",
"bye", "bye"),
levels = c("hi", "hello",
"bye", "bye-bye"))
head(adsl)
cars %>%
filter(speed > 4) %>%
ggplot() +
aes(x = speed) + #BREAK
aes(y = dist) + #BREAK
geom_point(
alpha = .8,
color = "blue"
) +
aes(size = speed) #BREAK
cars %>%
sample_frac(size = 1, replace = TRUE) %>%
ggplot() +
aes(x = speed) +
aes(y = dist) +
geom_count(
alpha = .7,
color = "blue",
size = 4
) +
geom_smooth(method = lm, se = FALSE) +
coord_cartesian(xlim = range(cars$speed),
ylim = range(cars$dist)) +
theme(legend.position = c(.9, .2))
# hello
jam <- "hi"
x <- c(1,2,3,4,5,6) ; class(x)
a1 = 10             ; class(a1)
b1 <- 11            ; class(b1)
x <- c(1,2,3,4,5,6) ; class(x)
a1 = 10             ; class(a1)
b1 <- 11            ; class(b1)
unlink("mini_flip_book_cache", recursive = TRUE)
x <- c(1,2,3,4,5,6) ; class(x)
a1 = 10             ; class(a1)
b1 <- 11            ; class(b1)
c = a1 + b1         ; class(c)
D = a1 * b1         ; class(D);
E = x - 10         ; class(E);
print(E)
unlink("mini_flip_book_cache", recursive = TRUE)
?c()
c()
?c
?str()
str(3)
?data.frame()
unlink("mini_flip_book_cache", recursive = TRUE)
L3 <- LETTERS[1:3]
l3
L3
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
(d <- data.frame(x = 1, y = 1:10, fac = fac))
## The "same" with automatic column names:
data.frame(1, 1:10, sample(L3, 10, replace = TRUE))
is.data.frame(d)
L3 <- LETTERS[1:3]
fac <- sample(L3, 10, replace = TRUE)
(d <- data.frame(x = 1, y = 1:5, fac = fac))
L3 <- LETTERS[1:3]
fac <- sample(L3, 5, replace = TRUE)
(d <- data.frame(x = 1, y = 1:5, fac = fac))
## The "same" with automatic column names:
data.frame(1, 1:5, sample(L3, 5, replace = TRUE))
is.data.frame(d)
library(tribble)
install.packages("tribble")
data.frame(
subjid  = 1:6,
country = c("INDIA", "JAPAN",
"UK", "FRA",
"US", "CAN"),
nums = c(2.3, 4.1, 3.5,
3.2, 5.6, 8.9))
library(tibble) # also a part of the tidyverse
# tribble helps build small data sets
tribble(
~"id", ~"greet", ~"nums", # column heads
1,        "INDIA",       2.3,
2,        "JAPAN",       3.5,
3,        "UK   ",       4.2,
4,        "FRA"  ,       3.2,
5,        "US"   ,       5.6,
6,        "CAN"  ,       8.9,
)
data.frame(
subjid  = 1:6,
country = c("INDIA", "JAPAN",
"UK", "FRA",
"US", "CAN"),
nums = c(2.3, 4.1, 3.5,
3.2, 5.6, 8.9))
library(tibble) # also a part of the tidyverse
# tribble helps build small data sets
tribble(
~"id", ~"greet", ~"nums", # column heads
1,        "INDIA",       2.3,
2,        "JAPAN",       3.5,
3,        "UK   ",       4.2,
4,        "FRA"  ,       3.2,
5,        "US"   ,       5.6,
6,        "CAN"  ,       8.9
)
unlink("mini_flip_book_cache", recursive = TRUE)
