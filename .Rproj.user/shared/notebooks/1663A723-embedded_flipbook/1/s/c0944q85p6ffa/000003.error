{"frames":[{"func":"embed_flipbook(chunk_name = \"fine_tuning\", font_size = 100, title_page = T, \n    title = \"How to Style your Plot\", subtitle = \"Thematic Adjustments\", \n    author = \"Reynolds Lab\", break_type = \"user\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"rmarkdown::render(rmd_path, quiet = T)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"knitr::knit(knit_input, knit_output, envir = envir, quiet = quiet)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"process_file(text, output)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(if (tangle) process_tangle(group) else process_group(group), \n    error = function(e) {\n        setwd(wd)\n        cat(res, sep = \"\\n\", file = output %n% \"\") ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"process_group(group)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"process_group.inline(group)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"call_inline(x)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"in_dir(input_dir(), inline_exec(block))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"inline_exec(block)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"hook_eval(code[i], envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withVisible(eval(parse_only(code), envir = envir))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(parse_only(code), envir = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval(parse_only(code), envir = envir)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"chunk_reveal(chunk_name = \"the_chunk\", break_type = \"user\", ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"chunk_name_return_code_sequence(chunk_name = chunk_name, break_type = break_type, \n    left_assign = left_assign, left_assign_add = left_assign_add, \n    lang = lang, omit = omit, replace = replace, replacements = replacements, \n    replace2 = replace2, replacements2 = replacements2, replace3 = replace3,  ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"chunk_name %>% chunk_code_get() %>% code_parse(lang = lang, omit = omit) %>% \n    parsed_return_partial_code_sequence(break_type = break_type, \n        left_assign = left_assign, left_assign_add = left_assign_add)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"parsed_return_partial_code_sequence(., break_type = break_type, \n    left_assign = left_assign, left_assign_add = left_assign_add)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"parsed_calc_show(parsed = parsed, break_type = break_type, replacements = NULL)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"code_parse(., lang = lang, omit = omit)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"r_code_full_parse(code = code, omit = omit) %>% dplyr::mutate(func = stringr::str_extract(code, \n    \"\\\\w+\\\\(\")) %>% dplyr::mutate(func = stringr::str_remove(func, \n    \"\\\\(\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dplyr::mutate(., func = stringr::str_remove(func, \"\\\\(\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"dplyr::mutate(., func = stringr::str_extract(code, \"\\\\w+\\\\(\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"r_code_full_parse(code = code, omit = omit)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"code %>% r_code_base_parse(omit = omit) %>% r_base_parsed_count_parentheses()","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"r_base_parsed_count_parentheses(.)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble::tibble(line = 1:num_lines)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tibble_quos(xs, .rows, .name_repair)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"eval_tidy(xs[[j]], mask)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in 1:num_lines : result would be too long a vector\n"}